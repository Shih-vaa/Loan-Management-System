// <auto-generated />
using System;
using LoanManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoanManagementSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LoanManagementSystem.Models.Commission", b =>
                {
                    b.Property<int>("CommissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("commission_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CommissionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CalculatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("calculated_at");

                    b.Property<int>("LeadId")
                        .HasColumnType("int")
                        .HasColumnName("lead_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("CommissionId");

                    b.HasIndex("LeadId");

                    b.HasIndex("UserId");

                    b.ToTable("Commissions");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasColumnType("longtext")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("full_name");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext")
                        .HasColumnName("phone");

                    b.HasKey("CustomerId");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.Lead", b =>
                {
                    b.Property<int>("LeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lead_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LeadId"));

                    b.Property<int?>("AssignedTo")
                        .HasColumnType("int")
                        .HasColumnName("assigned_to");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<int>("LeadGeneratorId")
                        .HasColumnType("int")
                        .HasColumnName("lead_generator_id");

                    b.Property<decimal>("LoanAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("loan_amount");

                    b.Property<string>("LoanType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("loan_type");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.HasKey("LeadId");

                    b.HasIndex("AssignedTo");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LeadGeneratorId");

                    b.ToTable("Leads");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.LeadDocument", b =>
                {
                    b.Property<int>("DocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("doc_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DocId"));

                    b.Property<string>("DocumentType")
                        .HasColumnType("longtext")
                        .HasColumnName("document_type");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("file_name");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("file_path");

                    b.Property<int>("LeadId")
                        .HasColumnType("int")
                        .HasColumnName("lead_id");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext")
                        .HasColumnName("remarks");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("uploaded_at");

                    b.Property<int?>("UploadedBy")
                        .HasColumnType("int")
                        .HasColumnName("uploaded_by");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("verified_at");

                    b.Property<int?>("VerifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("verified_by");

                    b.HasKey("DocId");

                    b.HasIndex("LeadId");

                    b.HasIndex("UploadedBy");

                    b.HasIndex("VerifiedBy");

                    b.ToTable("lead_documents");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("team_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("team_name");

                    b.HasKey("TeamId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("teams");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.TeamMember", b =>
                {
                    b.Property<int>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("team_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("TeamId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("team_members");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("full_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password_hash");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext")
                        .HasColumnName("phone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("role");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.Commission", b =>
                {
                    b.HasOne("LoanManagementSystem.Models.Lead", "Lead")
                        .WithMany()
                        .HasForeignKey("LeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagementSystem.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lead");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.Lead", b =>
                {
                    b.HasOne("LoanManagementSystem.Models.User", "AssignedUser")
                        .WithMany()
                        .HasForeignKey("AssignedTo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LoanManagementSystem.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LoanManagementSystem.Models.User", "LeadGenerator")
                        .WithMany()
                        .HasForeignKey("LeadGeneratorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssignedUser");

                    b.Navigation("Customer");

                    b.Navigation("LeadGenerator");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.LeadDocument", b =>
                {
                    b.HasOne("LoanManagementSystem.Models.Lead", "Lead")
                        .WithMany()
                        .HasForeignKey("LeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagementSystem.Models.User", "UploadedByUser")
                        .WithMany()
                        .HasForeignKey("UploadedBy");

                    b.HasOne("LoanManagementSystem.Models.User", "VerifiedByUser")
                        .WithMany()
                        .HasForeignKey("VerifiedBy");

                    b.Navigation("Lead");

                    b.Navigation("UploadedByUser");

                    b.Navigation("VerifiedByUser");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.Team", b =>
                {
                    b.HasOne("LoanManagementSystem.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.TeamMember", b =>
                {
                    b.HasOne("LoanManagementSystem.Models.Team", "Team")
                        .WithMany("Members")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagementSystem.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.Team", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
