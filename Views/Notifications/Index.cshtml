@model IEnumerable<LoanManagementSystem.Models.Notification>
@{
    ViewData["Title"] = "Notifications";
}

<div class="container mt-4">
    <h2>ðŸ”” Notifications</h2>
    <hr />

    <!-- Add Mark All As Read button at the top -->
    @if (Model.Any(n => !n.IsRead))
    {
        <form asp-action="MarkAllAsRead" method="post" class="mb-3">
            @Html.AntiForgeryToken()

            <button type="submit" class="btn btn-outline-primary">Mark All As Read</button>
        </form>
    }

    @if (!Model.Any())
    {
        <div class="alert alert-info">You have no notifications.</div>
    }
    else
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Message</th>
                    <th>Status</th>
                    <th>Time</th>
                    <th style="width: 160px;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var notification in Model)
                {
                    <tr class="@(notification.IsRead ? "" : "table-warning")">
                        <td>@notification.Message</td>
                        <td>
                            @if (notification.IsRead)
                            {
                                <span class="badge bg-secondary">Read</span>
                            }
                            else
                            {
                                <span class="badge bg-primary">Unread</span>
                            }
                        </td>
                        <td>@notification.CreatedAt.ToString("g")</td>
                        <td>
                            @if (!notification.IsRead)
                            {
                                @* <form asp-action="MarkAsRead" method="post" class="d-inline">
                                    @Html.AntiForgeryToken()

                                    <input type="hidden" name="id" value="@notification.NotificationId" />
                                    <button type="submit" class="btn btn-sm btn-success">Mark as Read</button>
                                </form> *@
                                <button class="btn btn-sm btn-success mark-as-read-btn"
        data-id="@notification.NotificationId"
        data-url="@Url.Action("MarkAsRead", "Notifications")">
    Mark as Read
</button>

                            }
                            <form asp-action="Delete" method="post" class="d-inline ms-1"
                                onsubmit="return confirm('Delete this notification?');">
                                <input type="hidden" name="id" value="@notification.NotificationId" />
                                <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@section Scripts {
<script>
    document.querySelectorAll('.mark-as-read-btn').forEach(button => {
        button.addEventListener('click', async function () {
            const id = this.dataset.id;
            const url = `${this.dataset.url}?id=${id}`;
            try {
                const res = await fetch(url, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });
                if (res.ok) {
                    const row = this.closest('tr');
                    row?.classList.remove('table-warning');
                    const badge = row.querySelector('.badge');
                    if (badge) {
                        badge.className = "badge bg-secondary";
                        badge.innerText = "Read";
                    }
                    this.remove(); // remove the Mark as Read button
                }
            } catch (err) {
                console.error("ðŸ”´ Failed to mark as read", err);
            }
        });
    });
</script>
}
