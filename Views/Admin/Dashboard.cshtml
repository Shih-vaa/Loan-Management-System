@{
    ViewData["Title"] = "Admin Dashboard";
}

@model LoanManagementSystem.Models.ViewModels.DashboardMetricsViewModel
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet">

<div class="container dashboard-container animate__animated animate__fadeIn">
    <!-- Dashboard Header -->
    <div class="dashboard-header mb-4">
        <h2 class="dashboard-title">ðŸ“Š Admin Dashboard</h2>
        <p class="dashboard-subtitle">Comprehensive overview of your loan management system</p>
    </div>

    @await Html.PartialAsync("_MessagesWidget", (IEnumerable<LoanManagementSystem.Models.Message>)ViewBag.RecentMessages)

    <!-- Metrics Cards -->
    <div class="row g-4">
        <!-- First Row -->
        <div class="col-md-3">
            <a href="/Lead" class="metric-card-link">
                <div class="card metric-card bg-primary text-white">
                    <div class="card-body">
                        <h5 class="card-title">Total Leads</h5>
                        <p class="metric-value animate__animated animate__pulse animate__infinite animate__slower">@Model.TotalLeads</p>
                        <i class="bi bi-people-fill metric-icon"></i>
                    </div>
                </div>
            </a>
        </div>

        <div class="col-md-3">
            <a href="/Lead?status=pending" class="metric-card-link">
                <div class="card metric-card bg-warning text-dark">
                    <div class="card-body">
                        <h5 class="card-title">Pending Leads</h5>
                        <p class="metric-value">@Model.PendingLeads</p>
                        <i class="bi bi-hourglass-split metric-icon animate__animated animate__rotateIn animate__infinite animate__slower"></i>
                    </div>
                </div>
            </a>
        </div>

        <div class="col-md-3">
            <a href="/Lead?status=approved" class="metric-card-link">
                <div class="card metric-card bg-success text-white">
                    <div class="card-body">
                        <h5 class="card-title">Approved Leads</h5>
                        <p class="metric-value">@Model.ApprovedLeads</p>
                        <i class="bi bi-check-circle-fill metric-icon animate__animated animate__tada animate__infinite animate__slower"></i>
                    </div>
                </div>
            </a>
        </div>

        <div class="col-md-3">
            <a href="/Customers" class="metric-card-link">
                <div class="card metric-card bg-secondary text-white">
                    <div class="card-body">
                        <h5 class="card-title">Customers</h5>
                        <p class="metric-value">@Model.TotalCustomers</p>
                        <i class="bi bi-person-badge-fill metric-icon"></i>
                    </div>
                </div>
            </a>
        </div>

        <!-- Second Row -->
        <div class="col-md-3">
            <a href="/Lead/Index?status=new" class="metric-card-link">
                <div class="card metric-card bg-danger text-white">
                    <div class="card-body">
                        <h5 class="card-title">Unassigned Leads</h5>
                        <p class="metric-value">@Model.UnassignedLeadsCount</p>
                        <i class="bi bi-person-x-fill metric-icon animate__animated animate__shakeX animate__infinite animate__slower"></i>
                    </div>
                </div>
            </a>
        </div>

        <div class="col-md-3">
            <a href="/LeadDocuments/AllDocs" class="metric-card-link">
                <div class="card metric-card bg-dark text-white">
                    <div class="card-body">
                        <h5 class="card-title">Documents Uploaded</h5>
                        <p class="metric-value">@Model.TotalDocumentsUploaded</p>
                        <i class="bi bi-file-earmark-arrow-up-fill metric-icon animate__animated animate__bounceIn animate__infinite animate__slower"></i>
                    </div>
                </div>
            </a>
        </div>

        <div class="col-md-3">
            <a href="/LeadDocuments/PendingDocs" class="metric-card-link">
                <div class="card metric-card bg-danger text-white">
                    <div class="card-body">
                        <h5 class="card-title">Pending Docs</h5>
                        <p class="metric-value">@Model.PendingDocuments</p>
                        <i class="bi bi-file-earmark-excel-fill metric-icon animate__animated animate__heartBeat animate__infinite animate__slower"></i>
                    </div>
                </div>
            </a>
        </div>

        <div class="col-md-3">
            <a href="/Commission" class="metric-card-link">
                <div class="card metric-card bg-info text-white">
                    <div class="card-body">
                        <h5 class="card-title">Total Commission</h5>
                        <p class="metric-value">â‚¹@Model.TotalCommission.ToString("N2")</p>
                        <i class="bi bi-cash-stack metric-icon animate__animated animate__flip animate__infinite animate__slower"></i>
                    </div>
                </div>
            </a>
        </div>
    </div>

    <!-- Team Performance Section -->
    <div class="dashboard-section mt-5 animate__animated animate__fadeInUp">
        <div class="section-header d-flex justify-content-between align-items-center mb-4">
            <h4 class="section-title">ðŸ“ˆ Team Performance Overview</h4>
            <a class="btn btn-sm btn-outline-primary hover-scale" href="/Admin/ExportMetrics">
                <i class="bi bi-download"></i> Export CSV
            </a>
        </div>

        <div class="table-responsive">
            <table class="table table-bordered table-hover" id="teamTable">
                <thead class="table-light">
                    <tr>
                        <th>Team</th>
                        <th>Leads Generated</th>
                        <th>Assigned</th>
                        <th>Docs Uploaded</th>
                        <th>Docs Verified</th>
                        <th>Approved</th>
                        <th>Commission (â‚¹)</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var t in Model.TeamPerformances)
                    {
                        <tr class="hover-zoom">
                            <td>@t.TeamName</td>
                            <td>@t.TotalLeadsGenerated</td>
                            <td>@t.LeadsAssigned</td>
                            <td>@t.DocumentsUploaded</td>
                            <td>@t.DocumentsVerified</td>
                            <td>@t.LeadsApproved</td>
                            <td>@t.TotalCommission.ToString("N2")</td>
                            <td class="text-center">
                                <a href="/Admin/TeamDrilldown?teamName=@t.TeamName" 
                                   class="btn btn-sm btn-outline-info hover-grow" 
                                   title="View Details">
                                    <i class="bi bi-bar-chart-fill"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="row mt-5">
        <div class="col-md-6">
            <div class="chart-container animate__animated animate__fadeInLeft">
                <h5 class="chart-title">ðŸ“Œ Lead Status Distribution</h5>
                <canvas id="leadStatusChart"></canvas>
            </div>
        </div>
        <div class="col-md-6">
            <div class="chart-container animate__animated animate__fadeInRight">
                <h5 class="chart-title">ðŸ“Š Team Performance Comparison</h5>
                <canvas id="teamPerformanceChart"></canvas>
            </div>
        </div>
    </div>
</div>

<style>
    /* Base Styles */
    .dashboard-container {
        padding: 2rem;
        background-color: #f8f9fa;
        border-radius: 10px;
        transition: all 0.5s ease;
    }
    
    .dashboard-header {
        padding-bottom: 1rem;
        border-bottom: 1px solid #dee2e6;
        transition: all 0.3s ease;
    }
    
    .dashboard-title {
        font-weight: 600;
        color: #343a40;
        text-shadow: 1px 1px 3px rgba(0,0,0,0.1);
    }
    
    .dashboard-subtitle {
        color: #6c757d;
        font-size: 1rem;
        transition: all 0.3s ease;
    }
    
    /* Metric Cards */
    .metric-card {
        border-radius: 8px;
        transition: all 0.3s ease;
        height: 100%;
        position: relative;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        transform: translateY(0);
    }
    
    .metric-card:hover {
        transform: translateY(-10px) scale(1.03);
        box-shadow: 0 15px 30px rgba(0,0,0,0.2);
        z-index: 10;
    }
    
    .metric-card-link {
        text-decoration: none;
        transition: all 0.3s ease;
    }
    
    .metric-value {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        transition: all 0.3s ease;
    }
    
    .metric-icon {
        position: absolute;
        right: 20px;
        bottom: 20px;
        font-size: 2.5rem;
        opacity: 0.2;
        transition: all 0.5s ease;
    }
    
    .metric-card:hover .metric-icon {
        opacity: 0.5;
        transform: scale(1.2);
    }
    









    /* Charts Section - Enhanced with Hover Background */
    .chart-container {

        background: rgba(255, 255, 255, 0.85);
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        border-radius: 12px;
        padding: 1.5rem;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        border: 1px solid rgba(255, 255, 255, 0.18);
        position: relative;
        overflow: hidden;
        height: 100%;
    }

    .chart-container::before {
        color: #69b4ff;
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #6a11cb, #2575fc);
        transition: all 0.4s ease;
    }

    /* Background Color Change on Hover */
    .chart-container:hover {
        background: rgba(245, 247, 250, 0.95); /* Lighter background on hover */
        transform: translateY(-5px);
        box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
    }

    /* More intense hover effect for the left chart */
    .col-md-6:first-child .chart-container:hover {
        background: rgba(240, 248, 255, 0.95); /* Alice blue tint */
    }

    /* Different hover effect for the right chart */
    .col-md-6:last-child .chart-container:hover {
        background: rgba(250, 250, 255, 0.95); /* White smoke tint */
    }

    .chart-container:hover::before {
        height: 6px;
        background: linear-gradient(90deg, #2575fc, #6a11cb); /* Reverse gradient on hover */
    }

    .chart-title {
        font-weight: 600;
        color: #ffffff;
        margin-bottom: 1.5rem;
        position: relative;
        display: inline-block;
        padding-bottom: 5px;
        transition: all 0.3s ease;
    }

    .chart-container:hover .chart-title {
        color: #5b68f8; /* Darker color on hover */
    }
    .chart-title::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 40px;
        height: 3px;
        background: linear-gradient(90deg, #3498db, #9b59b6);
        border-radius: 3px;
        transition: all 0.4s ease;
    }

    .chart-container:hover .chart-title::after {
        width: 100%;
    }

    /* Chart Canvas Styling */
    .chart-container canvas {
        transition: all 0.5s ease;
        transform: scale(1);
        color: wheat;
    }

    .chart-container:hover canvas {
        transform: scale(1.02);
        color: white;
    }

    /* Animation Enhancements */
    .animate__fadeInLeft {
        animation: fadeInLeftEnhanced 0.8s ease-out forwards;
    }

    .animate__fadeInRight {
        animation: fadeInRightEnhanced 0.8s ease-out forwards;
    }

    @@keyframes fadeInLeftEnhanced {
        0% {
            opacity: 0;
            transform: translateX(-30px) rotateY(15deg);
        }
        100% {
            opacity: 1;
            transform: translateX(0) rotateY(0);
        }
    }

    @@keyframes fadeInRightEnhanced {
        0% {
            opacity: 0;
            transform: translateX(30px) rotateY(-15deg);
        }
        100% {
            opacity: 1;
            transform: translateX(0) rotateY(0);
        }
    }

    /* Responsive Adjustments */
    @@media (max-width: 768px) {
        .chart-container {
            margin-bottom: 1.5rem;
        }
    }
    










    /* Table Effects */
    #teamTable th {
        white-space: nowrap;
        transition: all 0.3s ease;
    }
    
    .hover-zoom:hover {
        transform: scale(1.01);
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        z-index: 1;
        transition: all 0.3s ease;
    }
    
    /* Button Effects */
    .hover-scale {
        transition: all 0.3s ease;
    }
    
    .hover-scale:hover {
        transform: scale(1.05);
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }
    
    .hover-grow {
        transition: all 0.3s ease;
    }
    
    .hover-grow:hover {
        transform: scale(1.2);
    }
    
    /* Pulse Animation */
    @@keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.05); }
        100% { transform: scale(1); }
    }
    
    .pulse {
        animation: pulse 2s infinite;
    }
    
    /* Gradient Background Animation */
    .gradient-bg {
        background: linear-gradient(-45deg, #f8f9fa, #e9ecef, #dee2e6, #ced4da);
        background-size: 400% 400%;
        animation: gradientBG 15s ease infinite;
    }
    
    @@keyframes gradientBG {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
    }
    

    .container{
        background: #ffffff ;
        color: aliceblue;
        border-radius: 10%;
    }







    /* Team Performance Section - Enhanced Animations */
    .dashboard-section {
        background: rgba(255, 255, 255, 0.95);
        border-radius: 12px;
        padding: 1.5rem;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        transform: translateY(0);
        overflow: hidden;
        position: relative;
    }

    .dashboard-section::before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: linear-gradient(
            to bottom right,
            rgba(255, 255, 255, 0.1),
            rgba(255, 255, 255, 0)
        );
        transform: rotate(30deg);
        transition: all 1s ease;
        z-index: 0;
    }

    .dashboard-section:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
    }

    .dashboard-section:hover::before {
        transform: rotate(30deg) translateY(20%);
    }

    .section-header {
        position: relative;
        z-index: 1;
    }

    .section-title {
        font-weight: 700;
        color: #2c3e50;
        text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
        position: relative;
        display: inline-block;
    }

    .section-title::after {
        content: '';

        bottom: -5px;
        left: 0;
        width: 50px;
        height: 3px;
        background: linear-gradient(90deg, #3498db, #9b59b6);
        border-radius: 3px;
        transition: all 0.4s ease;
    }

    .section-header:hover .section-title::after {

        width: 100%;
        background: linear-gradient(90deg, #9b59b6, #3498db);
    }

    /* Enhanced Table Styling */
    #teamTable {
        position: relative;
        z-index: 1;
        border-collapse: separate;
        border-spacing: 0;
    }

    #teamTable thead th {
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        color: white;
        font-weight: 600;
        text-transform: uppercase;
        font-size: 0.8rem;
        letter-spacing: 0.5px;
        padding: 12px 15px;
        position: sticky;
        top: 0;
        z-index: 10;
    }

    #teamTable tbody tr {
        background: rgba(255, 255, 255, 0.9);
        transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    }

    #teamTable tbody tr.hover-zoom {
        transform: scale(1);
        transition: all 0.3s ease;
    }

    #teamTable tbody tr.hover-zoom:hover {
        transform: scale(1.01);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        z-index: 2;
        background: white;
    }

    #teamTable tbody td {
        padding: 12px 15px;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
    }

    #teamTable tbody tr:hover td {
        background: rgba(241, 243, 246, 0.7);
    }

    /* Button Enhancements */
    .hover-scale {
        transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        position: relative;
        overflow: hidden;
    }

    .hover-scale::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: all 0.6s ease;
    }

    .hover-scale:hover {
        transform: scale(1.05) translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .hover-scale:hover::before {
        left: 100%;
    }

    .hover-grow {
        transition: all 0.3s ease;
        transform: scale(1);
    }

    .hover-grow:hover {
        transform: scale(1.2) rotate(5deg);
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        color: white !important;
    }

    /* Table Row Entry Animation */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    #teamTable tbody tr {
        animation: fadeInUp 0.6s ease forwards;
        opacity: 0;
    }

    /* Staggered Animation */
    #teamTable tbody tr:nth-child(1) { animation-delay: 0.1s; }
    #teamTable tbody tr:nth-child(2) { animation-delay: 0.2s; }
    #teamTable tbody tr:nth-child(3) { animation-delay: 0.3s; }
    #teamTable tbody tr:nth-child(4) { animation-delay: 0.4s; }
    #teamTable tbody tr:nth-child(5) { animation-delay: 0.5s; }

    .ripple-effect {
        position: absolute;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.4);
        transform: scale(0);
        animation: ripple 0.6s linear;
        pointer-events: none;
    }

    @@keyframes ripple {
        to {
            transform: scale(2.5);
            opacity: 0;
        }
    }
</style>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Lead Status Chart (Pie)
        const leadStatusCtx = document.getElementById('leadStatusChart').getContext('2d');
        new Chart(leadStatusCtx, {
            type: 'pie',
            data: {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LeadStatusCounts.Keys)),
                datasets: [{
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LeadStatusCounts.Values)),
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.7)',
                        'rgba(255, 99, 132, 0.7)',
                        'rgba(255, 206, 86, 0.7)',
                        'rgba(75, 192, 192, 0.7)',
                        'rgba(153, 102, 255, 0.7)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'right',
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const label = context.label || '';
                                const value = context.raw || 0;
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = Math.round((value / total) * 100);
                                return `${label}: ${value} (${percentage}%)`;
                            }
                        }
                    }
                },
                animation: {
                    duration: 2000,
                    easing: 'easeOutQuart'
                }
            }
        });

        // Team Performance Chart (Bar)
        const teamLabels = @Html.Raw(Json.Serialize(Model.TeamPerformances.Select(t => t.TeamName)));
        const teamCtx = document.getElementById('teamPerformanceChart').getContext('2d');
        new Chart(teamCtx, {
            type: 'bar',
            data: {
                labels: teamLabels,
                datasets: [
                    {
                        label: 'Leads Generated',
                        data: @Html.Raw(Json.Serialize(Model.TeamPerformances.Select(t => t.TotalLeadsGenerated))),
                        backgroundColor: 'rgba(0, 123, 255, 0.7)'
                    },
                    {
                        label: 'Leads Assigned',
                        data: @Html.Raw(Json.Serialize(Model.TeamPerformances.Select(t => t.LeadsAssigned))),
                        backgroundColor: 'rgba(255, 193, 7, 0.7)'
                    },
                    {
                        label: 'Docs Uploaded',
                        data: @Html.Raw(Json.Serialize(Model.TeamPerformances.Select(t => t.DocumentsUploaded))),
                        backgroundColor: 'rgba(40, 167, 69, 0.7)'
                    },
                    {
                        label: 'Docs Verified',
                        data: @Html.Raw(Json.Serialize(Model.TeamPerformances.Select(t => t.DocumentsVerified))),
                        backgroundColor: 'rgba(23, 162, 184, 0.7)'
                    },
                    {
                        label: 'Leads Approved',
                        data: @Html.Raw(Json.Serialize(Model.TeamPerformances.Select(t => t.LeadsApproved))),
                        backgroundColor: 'rgba(108, 117, 125, 0.7)'
                    },
                    {
                        label: 'Commission (K â‚¹)',
                        data: @Html.Raw(Json.Serialize(Model.TeamPerformances.Select(t => Math.Round(t.TotalCommission / 1000)))),
                        backgroundColor: 'rgba(220, 53, 69, 0.7)',
                        type: 'line',
                        yAxisID: 'y1'
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'Team Performance Metrics'
                    },
                    tooltip: {
                        mode: 'index',
                        intersect: false
                    }
                },
                scales: {
                    x: {
                        stacked: false
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Count'
                        }
                    },
                    y1: {
                        position: 'right',
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Commission (K â‚¹)'
                        },
                        grid: {
                            drawOnChartArea: false
                        }
                    }
                },
                animation: {
                    duration: 2000,
                    easing: 'easeOutBounce'
                }
            }
        });

        // Add animation to table rows
        document.querySelectorAll('#teamTable tbody tr').forEach((row, index) => {
            row.style.opacity = '0';
            row.style.transform = 'translateX(-20px)';
            row.style.transition = `all 0.5s ease ${index * 0.1}s`;
            
            setTimeout(() => {
                row.style.opacity = '1';
                row.style.transform = 'translateX(0)';
            }, 100);
        });
    </script>
    <!-- Add this script for additional effects -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Add ripple effect to buttons
        const buttons = document.querySelectorAll('.hover-scale, .hover-grow');
        buttons.forEach(button => {
            button.addEventListener('click', function(e) {
                const ripple = document.createElement('span');
                ripple.className = 'ripple-effect';
                ripple.style.left = e.clientX - e.target.getBoundingClientRect().left + 'px';
                ripple.style.top = e.clientY - e.target.getBoundingClientRect().top + 'px';
                this.appendChild(ripple);
                
                setTimeout(() => {
                    ripple.remove();
                }, 600);
            });
        });

        // Add hover effect to table rows
        const tableRows = document.querySelectorAll('#teamTable tbody tr');
        tableRows.forEach(row => {
            row.addEventListener('mouseenter', function() {
                this.style.transform = 'scale(1.01)';
                this.style.boxShadow = '0 5px 15px rgba(0, 0, 0, 0.1)';
            });
            row.addEventListener('mouseleave', function() {
                this.style.transform = 'scale(1)';
                this.style.boxShadow = 'none';
            });
        });
    });
</script>
}