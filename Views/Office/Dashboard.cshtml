@model List<LoanManagementSystem.Models.Lead>
@{
    // üëá Cast ViewBag.TeamMemberships to a strongly typed list
    var teams = ViewBag.TeamMemberships as List<LoanManagementSystem.Models.Team>;
}

@{
    ViewData["Title"] = "Verification Dashboard";
}
@await Html.PartialAsync("_MessagesWidget", (IEnumerable<LoanManagementSystem.Models.Message>)ViewBag.RecentMessages)

<div class="container mt-4">
    <h2>üìÅ Verification Queue</h2>
    <hr />

    @if (!Model.Any())
    {
        <div class="alert alert-info">No leads pending verification.</div>
    }
    else
    {
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Lead ID</th>
                    <th>Customer</th>
                    <th>Calling Member</th>
                    <th>Team</th>
                    <th>Uploaded Docs</th>
                    <th>Last Uploaded</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
               @foreach (var lead in Model)
{
    var assignedUser = lead.AssignedUser?.FullName ?? "Unassigned";
    var team = teams?.FirstOrDefault(t => t.Members.Any(m => m.UserId == lead.AssignedTo));

    <tr>
        <td>LMS-@lead.LeadId.ToString("D4")</td>
        <td>@lead.Customer?.FullName</td>
        <td>@assignedUser</td>
        <td>@(team?.TeamName ?? "N/A")</td>
        <td>@lead.Documents?.Count()</td>
        <td>
            @if (lead.Documents?.Any() == true)
            {
                @lead.Documents.Max(d => d.UploadedAt).ToString("dd MMM, hh:mm tt")
            }
            else
            {
                <text>N/A</text>
            }
        </td>
        <td>
            <a class="btn btn-sm btn-primary"
               asp-controller="LeadDocuments"
               asp-action="Review"
               asp-route-leadId="@lead.LeadId">
                Review
            </a>
        </td>
    </tr>
}

            </tbody>
        </table>
    }
</div>
